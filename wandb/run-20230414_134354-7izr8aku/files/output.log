
reading xyz files: 100%|##########| 11926/11926 [00:01<00:00, 7793.51it/s]
Loading data into memory...
processing by request...
Processing xyz files and saving coords to data/processed/
making graphs:   4%|4         | 499/11926 [00:01<00:30, 370.18it/s]
Atomtypes coords saved to data/processed/atomtypes_coords.pt



















making graphs: 100%|##########| 11926/11926 [00:38<00:00, 310.74it/s]
Saved graphs to data/processed/reactant_graphs.pt and data/processed/product_graphs.pt
total / train / test / val: 1000 750 125 125
input node feats dim 16
input edge feats dim 1
trainable params in model:  108049
Log directory: logs/debug
checkpoint: None
num epochs: 1
eval_per_epochs: 0
patience: 150
minimum_epochs: 0
models_to_save: []
clip_grad: 100
log_iterations: 100
lr: 0.0001
weight decay: 0.0001
lr scheduler: <class 'torch.optim.lr_scheduler.ReduceLROnPlateau'>
factor: 0.6
min_lr: 8e-06
mode: max
lr_scheduler_patience: 60
lr_verbose: True
In trainer, metrics is {'mae': MAE()}
r graph [[Data(x=[13, 16], edge_index=[2, 146], edge_attr=[146], y=-1.1121574315126284, pos=[13, 3])], [Data(x=[11, 16], edge_index=[2, 110], edge_attr=[110], y=0.4104429082735989, pos=[11, 3])], [Data(x=[16, 16], edge_index=[2, 232], edge_attr=[232], y=-0.7316096188300337, pos=[16, 3])], [Data(x=[14, 16], edge_index=[2, 182], edge_attr=[182], y=0.9708313669714536, pos=[14, 3])], [Data(x=[8, 16], edge_index=[2, 54], edge_attr=[54], y=-0.5054134899620971, pos=[8, 3])], [Data(x=[16, 16], edge_index=[2, 238], edge_attr=[238], y=-0.4785618905099354, pos=[16, 3])], [Data(x=[15, 16], edge_index=[2, 210], edge_attr=[210], y=0.4287794315608635, pos=[15, 3])], [Data(x=[14, 16], edge_index=[2, 182], edge_attr=[182], y=1.0329900659645799, pos=[14, 3])]]
type r graph <class 'list'>
/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch/jit/_check.py:172: UserWarning: The TorchScript type system doesn't support instance-level annotations on empty non-base types in `__init__`. Instead, either 1) use a type annotation in the class body, or 2) wrap the type in `torch.jit.Attribute`.
  warnings.warn("The TorchScript type system doesn't support "
Traceback (most recent call last):
  File "/home/puck/projects/NequiReact/train.py", line 186, in <module>
    #train(run_dir, CV=args.CV, device=args.device, num_epochs=args.num_epochs, checkpoint=args.checkpoint)
  File "/home/puck/projects/NequiReact/train.py", line 145, in train
  File "/home/puck/projects/NequiReact/trainer/trainer.py", line 130, in train
    self.predict(train_loader, optim=self.optim)
  File "/home/puck/projects/NequiReact/trainer/trainer.py", line 199, in predict
    for i, batch in enumerate(data_loader):
  File "/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/puck/projects/NequiReact/process/collate.py", line 8, in custom_collate
    return Batch.from_data_list(r_graph), r_atomtypes, r_coords, Batch.from_data_list(p_graph), p_atomtypes, p_coords, label, idx
  File "/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch_geometric/data/batch.py", line 76, in from_data_list
    batch, slice_dict, inc_dict = collate(
  File "/home/puck/anaconda3/envs/nequireact/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 37, in collate
    out.stores_as(data_list[0])
AttributeError: 'listBatch' object has no attribute 'stores_as'